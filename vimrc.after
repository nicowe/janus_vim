"Map Esc Key to jk and kj, when in insert mode
inoremap jk <esc>
inoremap kj <esc>

"set rnu         "Relative Line numbers
set showcmd     "Display incomplete commands in the bottom right
set autoindent

" remap of unimpaired features
" Bubble single lines
nmap <C-k> [e
nmap <C-j> ]e
" Bubble multiple lines
vmap <C-k> [egv
vmap <C-j> ]egv

" LEADER MAPPINGS
nmap <leader>v :tabedit ~/.vimrc.after<CR>
" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬
" toggle display of tabs
nmap <leader>l :set list!<CR>
map <leader>n :NERDTreeToggle<CR>
"map <leader>n :NERDTree<CR>

"Window management
map <leader>ww <C-w>w
map <leader>wv <C-w>v
map <leader>ws <C-w>s
map <leader>wj <C-w>j
map <leader>wl <C-w>l
map <leader>wh <C-w>h

nmap <Left> :bp<CR>
nmap <Right> :bn<CR>

" Strip trailing whitespaces on each save
fun! <SID>StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    call cursor(l, c)
endfun
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()
 "Removes trailing spaces
"function TrimWhiteSpace()
  "%s/\s*$//
  "''
":endfunction

"map <F2> :call TrimWhiteSpace()<CR>
"map! <F2> :call TrimWhiteSpace()<CR>

" Toggle spell checking on and off
nmap <silent> <leader>s :set spell!<CR>
set spelllang=en_gb

" Source the vimrc.after file after saving it
if has("autocmd")
  autocmd bufwritepost .vimrc.after source ~/.vimrc.after
endif

"nmap <F10> :w<CR>:!ruby %<CR>
nmap <F10> :w<CR>:! g++ %<CR>:! ./a.out<CR>
nmap <F9> :w<CR>:! python %<CR>

" VISUAL
colorscheme blackboard
set transparency=5
set guioptions=aAce " no scrollbars
set guifont=Monaco:h13
